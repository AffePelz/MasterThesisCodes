import numpy as np
import mpmath as mp

mp.mp.dps=15
N=10000
epsilon=10**(-6)
x=np.linspace(0,2*float(mp.pi),N)
# For 10**9 with dps = 15
# y1 gives negative value of sign change: -6.56102074361773e-682188157
y1 = 1000000000.4340268958947434089036006725812789008669143053176447745516496964509714686064840348497422478275147677215386402858874603825471952417701835798068223303192538470615192076049371809193245593296229
# y2 gives negative value of sign change: -4.3815720664067e-682188157
y2 = 1000000001.2937394927044076976924485252180178322029692692607804106197939381740247434420722842364661839146902173886779964015591697668367098312164964690307120760057360940717598369656996152284637041026603
# y3 gives negative value of sign change: -4.42151488206067e-682188158
y3 = 1000000001.9098505173208544921453764429077427970089304959331882496393260943191716479864695135197665458694720064828650108798551674414991444115717019435267067878519048799717037119725842010613883086902432
# y4 gives negative value of sign change: -1.91307526726519e-682188157
y4 = 1000000001.6054652819648720667181477369215084452596580699010677775481852503319703684417105865786639417082119969735985040013228266626947528210262056800396894193418534201643615293579798726693727994985687

y60 = 1000000000.1156508900208481613883400760673839077794341046731996818836002729460014185799874607675641257731004044849822956786369833825320923793538716630465552192529935741928056168755419542984461499190711
"""
Results:
-1.90752633984943e-682188155
(1.0000000023882 + 1.69032218122062e-12j)
"""
#For 10**10
# y5 gives negative value of sign change: -2.42482036488615e-6821881744
y5 = 10000000000.060634346791852395529419685839837652625060592590481966988445551474663794808132379567169730674061823371396394848681056317786108999942994245984607968470174794003519838616100250318374210215548

# y6 gives negative value of sign change: -7.80750539800244e-6821881744
y6 = 10000000000.280288834966082790054427942304405461942550424346154634388547688955198401318412655915322508278507791329372598264242530305098642557961767988213674473235234795062684538288976511548179270573262

# y7 gives negative value of sign change: -1.26661712697699e-6821881743
y7 = 10000000001.040558446365229844414866728552699045298799057513944776342114897418937765107849122435342428672257985554459693379319616572198742362276036973766880521122674388147867892491178694143294137766576

# y8 gives negative value of sign change: -2.6592883573463e-6821881743
y8 = 10000000000.706504823144940410068588999150490110130041786658593316470404188643371446429377090420286407157948264841850950425192703409336315520825170111922132420851431175259408529169009553113641231545626

# y9 gives negative value of sign change: -1.31585222164278e-6821881743
y9 = 10000000001.290870692585983187939904375696795274856262391564444068473491799339535856909864601226722148275062686022152600556865702268889356857288263541272905675350538983720104052920377679395463158141153

"""
y10 = 9.79585755831746e-68218817663
y11 = 1.55997292874055e-68218817662
y12 = 8.38212222581537e-68218817665
y13 = 8.38212222581537e-68218817665
y14 = 2.68810207615065e-68218817664
"""
zero1 = 0.5 + y1*1j
zero2 = 0.5 + y2*1j
zero3 = 0.5 + y3*1j
zero4 = 0.5 + y4*1j
zero5 = 0.5 + y5*1j
zero6 = 0.5 + y6*1j
zero7 = 0.5 + y7*1j
zero8 = 0.5 + y8*1j
zero9 = 0.5 + y9*1j
zero60 = 0.5 + y60*1j

def xi(s):
    return s*(s-1)/2*mp.pi**(-s/2)*mp.gamma(s/2)*mp.zeta(s)

def Xi(s):
    return xi(1/2 + s*1j)

def xiDer(s):
    return mp.diff(xi,s,n=1)

zero = mp.zetazero(1)
def xiLog(theta):
    s = zero + epsilon*mp.exp(1j*theta)
    return (xiDer(s)/xi(s))*mp.exp(1j*theta)

def SignChange(s,e):
    tmp1=mp.re(Xi(s + e))
    tmp2=mp.re(Xi(s - e))
    return tmp1*tmp2

J = epsilon/(2*mp.pi)*mp.quad(xiLog, [0,2*mp.pi])
print(SignChange(y60,epsilon))
print(J)

# Example 2
S=0
for k in x:
    S += (epsilon/N)*xiLog(k)
#print(S)
